<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OfficeLib</name>
    </assembly>
    <members>
        <member name="T:OfficeLib.Commands">
            <summary>
            Commonly used command
            </summary>
        </member>
        <member name="F:OfficeLib.Commands.OBJECT_SHAPES">
            <summary>Command of Shapes</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_ADD">
            <summary>Command of Add</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_CLOSE">
            <summary>Command of Close</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_MOVE">
            <summary>Command of Move</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_OPEN">
            <summary>Command of Open</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_QUIT">
            <summary>Command of Quit</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_SAVE">
            <summary>Command of Save</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_SAVE_AS">
            <summary>Command of Save as</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_COPY">
            <summary>Command of Copy</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_DELETE">
            <summary>Command of Delete</summary>
        </member>
        <member name="F:OfficeLib.Commands.METHOD_SPECIAL_PASTE">
            <summary>Command of PasteSpecial</summary>
        </member>
        <member name="F:OfficeLib.Commands.COMMAND_CUT">
            <summary>Command of Cut</summary>
        </member>
        <member name="F:OfficeLib.Commands.COMMAND_COPY">
            <summary>Command of Copy</summary>
        </member>
        <member name="F:OfficeLib.Commands.COMMAND_PASTE">
            <summary>Command of Paste</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_BORDERS">
            <summary>Borders</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_COLOR">
            <summary>Color</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_COUNT">
            <summary>count</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_DISP_ALERT">
            <summary>Display alert</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_HEIGHT">
            <summary>Height</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_ITEM">
            <summary>Item</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_ITEMS">
            <summary>Items</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_LEFT">
            <summary>Left</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_LINE_STYLE">
            <summary>LineStyle</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_NAME">
            <summary>Name</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_PATH">
            <summary>Path</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_SAVED">
            <summary>Saved</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_TOP">
            <summary>Top</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_VERSION">
            <summary>Version</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_WEIGHT">
            <summary>Weight</summary>
        </member>
        <member name="F:OfficeLib.Commands.PROP_WIDTH">
            <summary>Width</summary>
        </member>
        <member name="P:OfficeLib.Commands.PROP_CUTCOPY_MODE">
            <summary>CutCopyMode</summary>
        </member>
        <member name="T:OfficeLib.FolderSearchOption">
            <summary>
            Specifies whether to search the current directory,
            or the current directory and all subdirectories.
            </summary>
        </member>
        <member name="F:OfficeLib.FolderSearchOption.AllFolders">
            <summary>
            Includes the current directory and all its subdirectories
            in a search operation.
            This option includes reparse points such as mounted drives
            and symbolic links in the search.
            </summary>
        </member>
        <member name="F:OfficeLib.FolderSearchOption.TopFolderOnly">
            <summary>
            Includes only the current directory in a search operation.
            </summary>
        </member>
        <member name="T:OfficeLib.MsoTriState">
            <summary>Office Boolean</summary>
        </member>
        <member name="F:OfficeLib.MsoTriState.msoTriStateToggle">
            <summary>Not supported</summary>
        </member>
        <member name="F:OfficeLib.MsoTriState.msoTriStateMixed">
            <summary>Not supported</summary>
        </member>
        <member name="F:OfficeLib.MsoTriState.msoTrue">
            <summary>True</summary>
        </member>
        <member name="F:OfficeLib.MsoTriState.msoFalse">
            <summary>False</summary>
        </member>
        <member name="F:OfficeLib.MsoTriState.msoCTrue">
            <summary>Not supported</summary>
        </member>
        <member name="T:OfficeLib.XLS.Border">
            <summary>Border class</summary>
        </member>
        <member name="P:OfficeLib.XLS.Border.Index">
            <summary>Border index</summary>
        </member>
        <member name="P:OfficeLib.XLS.Border.Weight">
            <summary>Border weight</summary>
        </member>
        <member name="P:OfficeLib.XLS.Border.LineStyle">
            <summary>Border line style</summary>
        </member>
        <member name="P:OfficeLib.XLS.Border.Color">
            <summary>Border color</summary>
        </member>
        <member name="M:OfficeLib.XLS.Border.#ctor">
            <summary></summary>
        </member>
        <member name="M:OfficeLib.XLS.Border.#ctor(OfficeLib.XLS.XlBordersIndex)">
            <summary></summary>
        </member>
        <member name="M:OfficeLib.XLS.Border.Clone(OfficeLib.XLS.XlBordersIndex,OfficeLib.XLS.Border)">
            <summary></summary>
            <param name="index"></param>
            <param name="border"></param>
        </member>
        <member name="T:OfficeLib.XLS.Cell`1">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Cell`1.Value">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Cell`1.RuledLine">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Cell`1.BackgroundColor">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Cell`1.ForegroundColor">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Cell`1.Fomula">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Cell`1.FontSize">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Cell`1.FormatType">
            <summary></summary>
        </member>
        <member name="M:OfficeLib.XLS.Cell`1.#ctor">
            <summary></summary>
        </member>
        <member name="T:OfficeLib.XLS.ExcelEditExtention">
            <summary>
            
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.ExcelEditExtention.SetBackgroundColor(OfficeLib.XLS.Excel,OfficeLib.XLS.Address,OfficeLib.XLS.Color)">
            <summary>
            Set colors for cell
            </summary>
            <param name="excel"></param>
            <param name="target"></param>
            <param name="color"></param>
            <remarks>
            [2003] and [2007 ～] Check operation
            </remarks>
        </member>
        <member name="M:OfficeLib.XLS.ExcelEditExtention.SetBackgroundColor(OfficeLib.XLS.Excel,OfficeLib.XLS.Address,OfficeLib.XLS.Address,OfficeLib.XLS.Color)">
            <summary>
            Set colors for cell
            </summary>
            <param name="excel"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="color"></param>
        </member>
        <member name="M:OfficeLib.XLS.ExcelEditExtention.SetBorder(OfficeLib.XLS.Excel,OfficeLib.XLS.Range,OfficeLib.XLS.Thickness)">
            <summary>
            Set Border
            </summary>
            <param name="excel"></param>
            <param name="target"></param>
            <param name="thickness"></param>
        </member>
        <member name="M:OfficeLib.XLS.ExcelEditExtention.SetBorder(OfficeLib.XLS.Excel,OfficeLib.XLS.Address,OfficeLib.XLS.XlBorderWeight,OfficeLib.XLS.XlLineStyle)">
            <summary>
            
            </summary>
            <param name="excel"></param>
            <param name="target"></param>
            <param name="xlWeight"></param>
            <param name="xlStyle"></param>
        </member>
        <member name="T:OfficeLib.XLS.ExcelCommands">
            <summary>
            Commands used in Excel
            </summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.OBJECT_CELL">
            <summary>Cells</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.OBJECT_RANGE">
            <summary>Range</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.OBJECT_SHEET">
            <summary>Sheets object ID</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.OBJECT_WORKBOOKS">
            <summary>WorkBooks object ID</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_COL">
            <summary>Column</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_FOMULA">
            <summary>Fomula</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_INTERIOR">
            <summary>Interior</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_ROW">
            <summary>Row</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_SHEET_IN_NEW_WORKBOOK">
            <summary>SheetsInNewWorkbook</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_TEXT">
            <summary>Text</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_VALUE">
            <summary>Value</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_VALUE2">
            <summary>Value2</summary>
            <remarks>
            The only difference between this property 
            and the Value property is that the Value2 property
            doesn’t use the Currency and Date data types.
            You can return values formatted with
            these data types as floating-point numbers
            by using the Double data type.
            </remarks>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_SPECIAL_CALLS">
            <summary>SpecialCells</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_CHART">
            <summary>Chart</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.PROP_CHART_TYPE">
            <summary>ChartType</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.METHOD_CHART_OBJECTS">
            <summary>ChartObjects</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelCommands.METHOD_SERIES_COLLECTION">
            <summary>SeriesCollection</summary>
        </member>
        <member name="T:OfficeLib.XLS.ComObj">
            <summary>
            
            </summary>
        </member>
        <member name="F:OfficeLib.XLS.ComObj._com">
            <summary>
            
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.ComObj.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="com"></param>
        </member>
        <member name="M:OfficeLib.XLS.ComObj.Method(System.String)">
            <summary>
            Method
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.ComObj.Method(System.String,System.Object[])">
            <summary>
            Method Args
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.ComObj.GetProperty(System.String)">
            <summary>
            Getproperty
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.ComObj.GetProperty(System.String,System.Object[])">
            <summary>
            Getproperty  Args
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.ComObj.ToInt">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.ComObj.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:OfficeLib.XLS.Constants">
            <summary>Constants Enumeration</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xl3DBar">
            <summary>3D Bar</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xl3DEffects1">
            <summary>3D Effects1</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xl3DEffects2">
            <summary>3D Effects2</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xl3DSurface">
            <summary>3D Surface</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlAbove">
            <summary>Above</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlAccounting1">
            <summary>Accounting1</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlAccounting2">
            <summary>Accounting2</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlAccounting4">
            <summary>Accounting4</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlAdd">
            <summary>Add</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlAll">
            <summary>All</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlAccounting3">
            <summary>Accounting3</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlAllExceptBorders">
            <summary>All Except Borders</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlAutomatic">
            <summary>Automatic</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlBar">
            <summary>Automatic</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlBelow">
            <summary>Below</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlBidi">
            <summary>Bidi</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlBidiCalendar">
            <summary>BidiCalendar</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlBoth">
            <summary>Both</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlBottom">
            <summary>Bottom</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlCascade">
            <summary>Cascade</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlCenter">
            <summary>Center</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlCenterAcrossSelection">
            <summary>Center Across Selection</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlChart4">
            <summary>Chart 4</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlChartSeries">
            <summary>Chart Series</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlChartShort">
            <summary>Chart Short</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlChartTitles">
            <summary>Chart Titles</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlChecker">
            <summary>Checker</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlCircle">
            <summary>Circle</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlClassic1">
            <summary>Classic1</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlClassic2">
            <summary>Classic2</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlClassic3">
            <summary>Classic3</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlClosed">
            <summary>Closed</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlColor1">
            <summary>Color1</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlColor2">
            <summary>Color2</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlColor3">
            <summary>Color3</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlColumn">
            <summary>Column</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlCombination">
            <summary>Combination</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlComplete">
            <summary>Complete</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlConstants">
            <summary>Constants</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlContents">
            <summary>Contents</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlContext">
            <summary>Context</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlCorner">
            <summary>Corner</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlCrissCross">
            <summary>CrissCross</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlCross">
            <summary>Cross</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlCustom">
            <summary>Custom</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDebugCodePane">
            <summary>Debug Code Pane</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDefaultAutoFormat">
            <summary>Default Auto Format</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDesktop">
            <summary>Desktop</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDiamond">
            <summary>Diamond</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDirect">
            <summary>Direct</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDistributed">
            <summary>Distributed</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDivide">
            <summary>Divide</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDoubleAccounting">
            <summary>Double Accounting</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDoubleClosed">
            <summary>Double Closed</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDoubleOpen">
            <summary>Double Open</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDoubleQuote">
            <summary>Double Quote</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlDrawingObject">
            <summary>Drawing Object</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlEntireChart">
            <summary>Entire Chart</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlExcelMenus">
            <summary>Excel Menus</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlExtended">
            <summary>Extended</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlFill">
            <summary>Fill</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlFirst">
            <summary>First</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlFixedValue">
            <summary>Fixed Value</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlFloating">
            <summary>Floating</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlFormats">
            <summary>Formats</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlFormula">
            <summary>Formula</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlFullScript">
            <summary>Full Script</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlGeneral">
            <summary>General</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlGray16">
            <summary>Gray16</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlGray25">
            <summary>Gray25</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlGray50">
            <summary>Gray50</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlGray75">
            <summary>Gray75</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlGray8">
            <summary>Gray8</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlGregorian">
            <summary>Gregorian</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlGrid">
            <summary>Grid</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlGridline">
            <summary>Gridline</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlHigh">
            <summary>High</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlHindiNumerals">
            <summary>Hindi Numerals</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlIcons">
            <summary>Icons</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlImmediatePane">
            <summary>Immediate Pane</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlInside">
            <summary>Inside</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlInteger">
            <summary>Integer</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlJustify">
            <summary>Justify</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLast">
            <summary>Last</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLastCell">
            <summary>Last Cell</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLatin">
            <summary>Latin</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLeft">
            <summary>Left</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLeftToRight">
            <summary>Left To Right</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLightDown">
            <summary>Light Down</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLightHorizontal">
            <summary>Light Horizontal</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLightUp">
            <summary>Light Up</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLightVertical">
            <summary>Light Vertical</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlList1">
            <summary>List1</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlList2">
            <summary>List2</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlList3">
            <summary>List3</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLocalFormat1">
            <summary>Local Format1</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLocalFormat2">
            <summary>Local Format2</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLogicalCursor">
            <summary>Logical Cursor</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLong">
            <summary>Long</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLotusHelp">
            <summary>Lotus Help</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLow">
            <summary>Low</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlLTR">
            <summary>LTR</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlMacrosheetCell">
            <summary>MacrosheetCell</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlManual">
            <summary>Manual</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlMaximum">
            <summary>Maximum</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlMinimum">
            <summary>Minimum</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlMinusValues">
            <summary>Minus Values</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlMixed">
            <summary>Mixed</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlMixedAuthorizedScript">
            <summary>Mixed Authorized Script</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlMixedScript">
            <summary>Mixed Script</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlModule">
            <summary>Module</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlMultiply">
            <summary>Multiply</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlNarrow">
            <summary>Narrow</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlNextToAxis">
            <summary>Next To Axis</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlNoDocuments">
            <summary>No Documents</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlNone">
            <summary>None</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlNotes">
            <summary>Notes</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlOff">
            <summary>Off</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlOn">
            <summary>On</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlOpaque">
            <summary>Opaque</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlOpen">
            <summary>Open</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlOutside">
            <summary>Outside</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlPartial">
            <summary>Partial</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlPartialScript">
            <summary>Partial Script</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlPercent">
            <summary>Percent</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlPlus">
            <summary>Plus</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlPlusValues">
            <summary>Plus Values</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlReference">
            <summary>Reference</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlRight">
            <summary>Right</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlRTL">
            <summary>RTL</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlScale">
            <summary>Scale</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSemiautomatic">
            <summary>Semiautomatic</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSemiGray75">
            <summary>SemiGray75</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlShort">
            <summary>Short</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlShowLabel">
            <summary>Show Label</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlShowLabelAndPercent">
            <summary>Show Label and Percent</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlShowPercent">
            <summary>Show Percent</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlShowValue">
            <summary>Show Value</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSimple">
            <summary>Simple</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSingle">
            <summary>Single</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSingleAccounting">
            <summary>Single Accounting</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSingleQuote">
            <summary>Single Quote</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSolid">
            <summary>Solid</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSquare">
            <summary>Square</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlStar">
            <summary>Star</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlStError">
            <summary>St Error</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlStrict">
            <summary>Strict</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSubtract">
            <summary>Subtract</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlSystem">
            <summary>System</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlTextBox">
            <summary>Text Box</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlTiled">
            <summary>Tiled</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlTitleBar">
            <summary>Title Bar</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlToolbar">
            <summary>Toolbar</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlToolbarButton">
            <summary>Toolbar Button</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlTop">
            <summary>Top</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlTopToBottom">
            <summary>Top To Bottom</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlTransparent">
            <summary>Transparent</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlTriangle">
            <summary>Triangle</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlVeryHidden">
            <summary>Very Hidden</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlVisible">
            <summary>Visible</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlVisualCursor">
            <summary>Visual Cursor</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlWatchPane">
            <summary>Watch Pane</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlWide">
            <summary>Wide</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlWorkbookTab">
            <summary>Workbook Tab</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlWorksheet4">
            <summary>Worksheet4</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlWorksheetCell">
            <summary>Worksheet Cell</summary>
        </member>
        <member name="F:OfficeLib.XLS.Constants.xlWorksheetShort">
            <summary>Worksheet Short</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlBordersIndex">
            <summary>XlBordersIndex Enumeration</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBordersIndex.xlDiagonalDown">
            <summary>Border running from the upper left-hand corner to the lower right of each cell in the range.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBordersIndex.xlDiagonalUp">
            <summary>Border running from the lower left-hand corner to the upper right of each cell in the range.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBordersIndex.xlEdgeBottom">
            <summary>Border at the bottom of the range.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBordersIndex.xlEdgeLeft">
            <summary>Border at the left-hand edge of the range.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBordersIndex.xlEdgeRight">
            <summary>Border at the right-hand edge of the range.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBordersIndex.xlEdgeTop">
            <summary>Border at the top of the range.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBordersIndex.xlInsideHorizontal">
            <summary>Horizontal borders for all cells in the range except borders on the outside of the range.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBordersIndex.xlInsideVertical">
            <summary>Vertical borders for all the cells in the range except borders on the outside of the range.</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlBorderWeight">
            <summary>XlBorderWeight Enumeration </summary>
            <remarks>Specifies the weight of the border around a range.</remarks>
        </member>
        <member name="F:OfficeLib.XLS.XlBorderWeight.xlHairline">
            <summary>Hairline (thinnest border).</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBorderWeight.xlMedium">
            <summary>Medium.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBorderWeight.xlThick">
            <summary>Thick (widest border).</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlBorderWeight.xlThin">
            <summary>Thin.</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlCorruptLoad">
            <summary>XlCorruptLoad Enumeration</summary>
            <remarks>Specifies the processing for a file when it is opened.</remarks>
        </member>
        <member name="F:OfficeLib.XLS.XlCorruptLoad.xlNormalLoad">
            <summary>Workbook is opened normally.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCorruptLoad.xlRepairFile">
            <summary>Workbook is opened in repair mode.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCorruptLoad.xlExtractData">
            <summary>Workbook is opened in extract data mode.</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlGetValueFormat">
            <summary>XlGetValueType Enumeration</summary>
            <remarks>Specifies the format for retrieving values from a cell.</remarks>
        </member>
        <member name="F:OfficeLib.XLS.XlGetValueFormat.xlValue">
            <summary>Value</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlGetValueFormat.xlValue2">
            <summary>Floating-point numbers</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlGetValueFormat.xlText">
            <summary>Text</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlGetValueFormat.xlFormula">
            <summary>Fomula</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlLineStyle">
            <summary>XlLineStyle Enumeration</summary>
            <remarks>Specifies the line style for the border.</remarks>
        </member>
        <member name="F:OfficeLib.XLS.XlLineStyle.xlContinuous">
            <summary>Continuous line.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlLineStyle.xlDash">
            <summary>Dashed line.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlLineStyle.xlDashDot">
            <summary>Alternating dashes and dots.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlLineStyle.xlDashDotDot">
            <summary>Dash followed by two dots.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlLineStyle.xlDot">
            <summary>Dotted line.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlLineStyle.xlDouble">
            <summary>Double line.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlLineStyle.xlLineStyleNone">
            <summary>No line.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlLineStyle.xlSlantDashDot">
            <summary>Slanted dashes.</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlPlatform">
            <summary>XlPlatform Enumeration</summary>
            <remarks>Specifies the platform on which a text file originated.</remarks>
        </member>
        <member name="F:OfficeLib.XLS.XlPlatform.xlMacintosh">
            <summary>Macintosh</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPlatform.xlMSDOS">
            <summary>MS-DOS</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPlatform.xlWindows">
            <summary>Microsoft Windows</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlSpecialCellsValue">
            <summary>XlSpecialCellsValue Enumeration</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlSpecialCellsValue.xlErrors">
            <summary>Cells with errors.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlSpecialCellsValue.xlLogical">
            <summary>Cells with logical values.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlSpecialCellsValue.xlNumbers">
            <summary>Cells with numeric values.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlSpecialCellsValue.xlTextValues">
            <summary>Cells with text.</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlCellType">
            <summary>XlCellType Enumeration</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeAllFormatConditions">
            <summary>表示形式が設定されているセル</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeAllValidation">
            <summary>条件の設定が含まれているセル</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeBlanks">
            <summary>空の文字列</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeComments">
            <summary>コメントが含まれているセル</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeConstants">
            <summary>定数が含まれているセル</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeFormulas">
            <summary>数式が含まれているセル</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeLastCell">
            <summary>使われたセル範囲内の最後のセル</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeSameFormatConditions">
            <summary>同じ表示形式が設定されているセル</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeSameValidation">
            <summary>同じ条件の設定が含まれているセル</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellType.xlCellTypeVisible">
            <summary>すべての可視セル</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlFormatConditionType">
            <summary>XlFormatConditionType Enumeration</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlAboveAverageCondition">
            <summary>Above average condition</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlBlanksCondition">
            <summary>Blanks condition</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlCellValue">
            <summary>Cell value</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlColorScale">
            <summary>Color scale</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlDatabar">
            <summary>Databar</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlErrorsCondition">
            <summary>Errors condition</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlExpression">
            <summary>Expression</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.XlIconSet">
            <summary>Icon set</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlNoBlanksCondition">
            <summary>No blanks condition</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlNoErrorsCondition">
            <summary>No errors condition</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlTextString">
            <summary>Text string</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlTimePeriod">
            <summary>Time period</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlTop10">
            <summary>Top 10 values</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionType.xlUniqueValues">
            <summary>Unique values</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlFormatConditionOperator">
            <summary>XlFormatConditionOperator Enumeration</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionOperator.xlBetween">
            <summary>Between. Can be used only if two formulas are provided.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionOperator.xlEqual">
            <summary>Equal.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionOperator.xlGreater">
            <summary>Greater than.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionOperator.xlGreaterEqual">
            <summary>Greater than or equal to.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionOperator.xlLess">
            <summary>Less than.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionOperator.xlLessEqual">
            <summary>Less than or equal to.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionOperator.xlNotBetween">
            <summary>Not between. Can be used only if two formulas are provided.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlFormatConditionOperator.xlNotEqual">
            <summary>Not equal.</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlThemeColor">
            <summary>XlThemeColor Enumeration</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorAccent1">
            <summary>Accent1</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorAccent2">
            <summary>Accent2</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorAccent3">
            <summary>Accent3</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorAccent4">
            <summary>Accent4</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorAccent5">
            <summary>Accent5</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorAccent6">
            <summary>Accent6</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorDark1">
            <summary>Dark1</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorDark2">
            <summary>Dark2</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorFollowedHyperlink">
            <summary>Followed hyperlink</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorHyperlink">
            <summary>Hyperlink</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorLight1">
            <summary>Light1</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlThemeColor.xlThemeColorLight2">
            <summary>Light2</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlPasteType">
            <summary>Specifies the part of the range to be pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteAll">
            <summary>Everything will be pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteAllExceptBorders">
            <summary>Everything except borders will be pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteAllMergingConditionalFormats">
            <summary>Everything will be pasted and conditional formats will be merged.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteAllUsingSourceTheme">
            <summary>Everything will be pasted using the source theme.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteColumnWidths">
            <summary>Copied column width is pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteComments">
            <summary>Comments are pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteFormats">
            <summary>Copied source format is pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteFormulas">
            <summary>Formulas are pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteFormulasAndNumberFormats">
            <summary>Formulas and Number formats are pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteValidation">
            <summary>Validations are pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteValues">
            <summary>Values are pasted.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlPasteType.xlPasteValuesAndNumberFormats">
            <summary>Values and Number formats are pasted.</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlCellReference">
            <summary>Cell reference type</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellReference.Relative">
            <summary>Releative Reference</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlCellReference.Absolute">
            <summary>Absolute Reference</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlVersion">
            <summary>Excel version number</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel5">
            <summary>5</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel95">
            <summary>95</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel97">
            <summary>97</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel2000">
            <summary>2000</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel2002">
            <summary>2002</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel2003">
            <summary>2003</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel2007">
            <summary>2007</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel2010">
            <summary>2010</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel2013">
            <summary>2013</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlVersion.Excel2016">
            <summary>2016</summary>
        </member>
        <member name="T:OfficeLib.XLS.XlChartType">
            <summary>Specifies the chart type</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DArea">
            <summary>3D Area.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DAreaStacked">
            <summary>3D Stacked Area.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DAreaStacked100">
            <summary>100% Stacked Area.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DBarClustered">
            <summary>3D Clustered Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DBarStacked">
            <summary>3D Stacked Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DBarStacked100">
            <summary>3D 100% Stacked Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DColumn">
            <summary>3D Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DColumnClustered">
            <summary>3D Clustered Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DColumnStacked">
            <summary>3D Stacked Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DColumnStacked100">
            <summary>3D 100% Stacked Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DLine">
            <summary>3D Line.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DPie">
            <summary>3D Pie.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xl3DPieExploded">
            <summary>Exploded 3D Pie.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlArea">
            <summary>Area</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlAreaStacked">
            <summary>Stacked Area.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlAreaStacked100">
            <summary>100% Stacked Area.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlBarClustered">
            <summary>Clustered Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlBarOfPie">
            <summary>Bar of Pie.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlBarStacked">
            <summary>Stacked Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlBarStacked100">
            <summary>100% Stacked Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlBubble">
            <summary>Bubble.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlBubble3DEffect">
            <summary>Bubble with 3D effects.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlColumnClustered">
            <summary>Clustered Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlColumnStacked">
            <summary>Stacked Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlColumnStacked100">
            <summary>100% Stacked Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlConeBarClustered">
            <summary>Clustered Cone Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlConeBarStacked">
            <summary>Stacked Cone Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlConeBarStacked100">
            <summary>100% Stacked Cone Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlConeCol">
            <summary>3D Cone Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlConeColClustered">
            <summary>Clustered Cone Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlConeColStacked">
            <summary>Stacked Cone Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlConeColStacked100">
            <summary>100% Stacked Cone Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlCylinderBarClustered">
            <summary>Clustered Cylinder Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlCylinderBarStacked">
            <summary>Stacked Cylinder Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlCylinderBarStacked100">
            <summary>100% Stacked Cylinder Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlCylinderCol">
            <summary>3D Cylinder Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlCylinderColClustered">
            <summary>Clustered Cone Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlCylinderColStacked">
            <summary>Stacked Cone Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlCylinderColStacked100">
            <summary>100% Stacked Cylinder Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlDoughnut">
            <summary>Doughnut.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlDoughnutExploded">
            <summary>Exploded Doughnut.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlLine">
            <summary>Line.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlLineMarkers">
            <summary>Line with Markers.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlLineMarkersStacked">
            <summary>Stacked Line with Markers.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlLineMarkersStacked100">
            <summary>100% Stacked Line with Markers.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlLineStacked">
            <summary>Stacked Line.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlLineStacked100">
            <summary>100% Stacked Line.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPie">
            <summary>Pie.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPieExploded">
            <summary>Exploded Pie.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPieOfPie">
            <summary>Pie of Pie.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPyramidBarClustered">
            <summary>Clustered Pyramid Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPyramidBarStacked">
            <summary>Stacked Pyramid Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPyramidBarStacked100">
            <summary>100% Stacked Pyramid Bar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPyramidCol">
            <summary>3D Pyramid Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPyramidColClustered">
            <summary>Clustered Pyramid Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPyramidColStacked">
            <summary>Stacked Pyramid Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlPyramidColStacked100">
            <summary>100% Stacked Pyramid Column.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlRadar">
            <summary>Radar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlRadarFilled">
            <summary>Filled Radar.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlRadarMarkers">
            <summary>Radar with Data Markers.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlRegionMap">
            <summary>Map chart.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlStockHLC">
            <summary>High-Low-Close.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlStockOHLC">
            <summary>Open-High-Low-Close.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlStockVHLC">
            <summary>Volume-High-Low-Close.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlStockVOHLC">
            <summary>Volume-Open-High-Low-Close.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlSurface">
            <summary>3D Surface.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlSurfaceTopView">
            <summary>Surface (Top View).</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlSurfaceTopViewWireframe">
            <summary>Surface (Top View wireframe).</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlSurfaceWireframe">
            <summary>3D Surface (wireframe).</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlXYScatter">
            <summary>Scatter.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlXYScatterLines">
            <summary>Scatter with Lines.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlXYScatterLinesNoMarkers">
            <summary>Scatter with Lines and No Data Markers.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlXYScatterSmooth">
            <summary>Scatter with Smoothed Lines.</summary>
        </member>
        <member name="F:OfficeLib.XLS.XlChartType.xlXYScatterSmoothNoMarkers">
            <summary>Scatter with Smoothed Lines and No Data Markers.</summary>
        </member>
        <member name="T:OfficeLib.XLS.ExcelSheetAttribute">
            <summary>Excel sheet attribute</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelSheetAttribute.DEF_ROW_MAX">
            <summary>Defeult : Row max value</summary>
        </member>
        <member name="F:OfficeLib.XLS.ExcelSheetAttribute.DEF_COL_MAX">
            <summary>Defeult : Column max value</summary>
        </member>
        <member name="P:OfficeLib.XLS.ExcelSheetAttribute.RowMax">
            <summary>Row max value</summary>
        </member>
        <member name="P:OfficeLib.XLS.ExcelSheetAttribute.ColMax">
            <summary>Column max value</summary>
        </member>
        <member name="M:OfficeLib.XLS.ExcelSheetAttribute.#ctor(OfficeLib.EnumSheetPermission)">
            <summary>Constructor</summary>
        </member>
        <member name="T:OfficeLib.XLS.Color">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Color.R">
            <summary>Red</summary>
        </member>
        <member name="P:OfficeLib.XLS.Color.G">
            <summary>Green</summary>
        </member>
        <member name="P:OfficeLib.XLS.Color.B">
            <summary>Blue</summary>
        </member>
        <member name="M:OfficeLib.XLS.Color.#ctor">
            <summary></summary>
        </member>
        <member name="M:OfficeLib.XLS.Color.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OfficeLib.XLS.Color.AdjustLimit(System.Int32)">
            <summary>
            Adjust to 0 - 255
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OfficeLib.XLS.Color.RGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get color index
            </summary>
            <param name="r">Red</param>
            <param name="g">Green</param>
            <param name="b">Blue</param>
        </member>
        <member name="M:OfficeLib.XLS.Color.RGB">
            <summary>
            Get color index
            </summary>
        </member>
        <member name="T:OfficeLib.XLS.Range">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Range.Start">
            <summary></summary>
        </member>
        <member name="P:OfficeLib.XLS.Range.End">
            <summary></summary>
        </member>
        <member name="M:OfficeLib.XLS.Range.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="rangeString"></param>
        </member>
        <member name="M:OfficeLib.XLS.Range.#ctor(OfficeLib.XLS.Address)">
            <summary>Constructor</summary>
            <param name="target"></param>
        </member>
        <member name="M:OfficeLib.XLS.Range.#ctor(OfficeLib.XLS.Address,OfficeLib.XLS.Address)">
            <summary>Constructor</summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:OfficeLib.XLS.Range.ToString">
            <summary>
            Range to String
            </summary>
        </member>
        <member name="T:OfficeLib.XLS.SheetObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.SheetObject.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="T:OfficeLib.XLS.Thickness">
            <summary>
            Border Thickness 
            </summary>
        </member>
        <member name="P:OfficeLib.XLS.Thickness.Left">
            <summary>Left</summary>
        </member>
        <member name="P:OfficeLib.XLS.Thickness.Top">
            <summary>Top</summary>
        </member>
        <member name="P:OfficeLib.XLS.Thickness.Right">
            <summary>Right</summary>
        </member>
        <member name="P:OfficeLib.XLS.Thickness.Bottom">
            <summary>Bottom</summary>
        </member>
        <member name="P:OfficeLib.XLS.Thickness.Values">
            <summary>4 points param array</summary>
        </member>
        <member name="M:OfficeLib.XLS.Thickness.#ctor">
            <summary></summary>
        </member>
        <member name="M:OfficeLib.XLS.Thickness.#ctor(OfficeLib.XLS.Border,OfficeLib.XLS.Border,OfficeLib.XLS.Border,OfficeLib.XLS.Border)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:OfficeLib.XLS.Thickness.#ctor(OfficeLib.XLS.Border)">
            <summary>
            
            </summary>
            <param name="all"></param>
        </member>
        <member name="T:OfficeLib.XLS.ExcelExtention">
            <summary>Excel extention method class</summary>
        </member>
        <member name="M:OfficeLib.XLS.ExcelExtention.ToAddress(System.String)">
            <summary>
            Convert character string to cell address
            </summary>
            <param name="value">character string</param>
            <returns>Address class object</returns>
        </member>
        <member name="M:OfficeLib.XLS.ExcelExtention.ToExcelColumnString(System.Int32)">
            <summary>
            Convert numbers to strings in A1 format
            </summary>
            <param name="value">Value to convert</param>
        </member>
        <member name="M:OfficeLib.XLS.ExcelExtention.ToColumnNumber(System.String)">
            <summary>
            Convert column side strings to numbers
            </summary>
            <param name="value">column side strings</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.ExcelExtention.ToRange(System.String)">
            <summary>
            Convert character string to range
            </summary>
            <param name="value">character string</param>
            <returns>Range class object</returns>
        </member>
        <member name="T:OfficeLib.XLS.Excel">
            <summary>
            Excel Class
            </summary>
            <remarks>
            Excel xxx Object Library wrapper.
            "xxx" is version.
            This library works with arbitrary version.
            "*.xls","*.xlsx","*.xlsm" ... etc
            </remarks>
        </member>
        <member name="F:OfficeLib.XLS.Excel.PROG_ID">
            <summary>Application object ID</summary>
        </member>
        <member name="F:OfficeLib.XLS.Excel.ARGS_OPEN">
            <summary>argument count of "Open" method</summary>
        </member>
        <member name="F:OfficeLib.XLS.Excel.ROW">
            <summary>Row</summary>
        </member>
        <member name="F:OfficeLib.XLS.Excel.COL">
            <summary>Columun</summary>
        </member>
        <member name="P:OfficeLib.XLS.Excel.Book">
            <summary>Book object</summary>
        </member>
        <member name="P:OfficeLib.XLS.Excel.Sheet">
            <summary>Sheet object</summary>
        </member>
        <member name="P:OfficeLib.XLS.Excel.ActiveSheetName">
            <summary>Active sheet name</summary>
        </member>
        <member name="F:OfficeLib.XLS.Excel._sheetNames">
            <summary>Sheet names (internal variable)</summary>
        </member>
        <member name="P:OfficeLib.XLS.Excel.SheetNames">
            <summary>Sheet names in the Book</summary>
        </member>
        <member name="P:OfficeLib.XLS.Excel.IsAutoSave">
            <summary>Auto Save</summary>
        </member>
        <member name="M:OfficeLib.XLS.Excel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Excel.Open(System.String)">
            <summary>
            Excel file open
            </summary>
            <param name="file">File path</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.Open(System.String,System.Boolean)">
            <summary>
            Excel file open (optional auto save)
            </summary>
            <param name="file">File path</param>
            <param name="isAutoSave">true : Auto, false : Manual</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.Open(System.Object[])">
            <summary>
            Excel file open (details)
            </summary>
            <param name="options">file open arguments</param>
            <remarks>
            Argument parameter details
            No, Argument,                    Optional,   Type
            01, FileName,                    true,       String
            02, UpdateLinks,                 true,       AutomationSecurity
            03, ReadOnly,                    true,       Boolean
            04, Format,                      true,       Int32(1[Tab] 2[,] 3[Speace] 4[;] 5[none] 6[custom])
            05, Password,                    true,       String
            06, WriteResPassword,            true,       String
            07, IgnoreReadOnlyRecommended,   true,       Boolean
            08, Origin,                      true,       XlPlatform(enum)
            09, Delimiter,                   true,       Char (If the format is of 6. Specify custom Delimiter)
            10, Editable,                    true,       Boolean
            11, Notify,                      true,       Boolean
            12, Converter,                   true,       FileConverters
            13, AddToMru,                    true,       Boolean
            14, Local,                       true,       Boolean
            15, CorruptLoad,                 true,       XlCorruptLoad(enum)
            See MSDN for further details.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetOpenArguments(System.Object[])">
            <summary>
            Set Open Arguments
            </summary>
            <param name="args">Arguments</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.New(System.String)">
            <summary>
            Create a new Excel file
            </summary>
            <param name="file">File path</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.Close">
            <summary>
            Close Excel
            </summary>
            <remarks>
            It must be done at the end.
            If not called, the process will keep capturing the file.
            </remarks>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SelectSheet(System.String)">
            <summary>
            Select the Sheet(Sheet name)
            </summary>
            <param name="sheetName">Sheet name</param>
            <returns>Success(true), Failure(false)</returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SelectSheet(System.Int32)">
            <summary>
            Select the Sheet(Sheet index)
            </summary>
            <param name="sheetIndex"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetWorkBookSheetNames">
            <summary>
            Get a list of sheet names
            </summary>
            <returns>Sheet names</returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.AddSheet(System.String)">
            <summary>
            Add the sheet
            </summary>
            <param name="sheetName">Sheet name</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.RemoveSheet(System.String)">
            <summary>
            Remove the sheet
            </summary>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.CopySheet(System.String,System.String)">
            <summary>
            Copy the sheet
            </summary>
            <param name="sourceSheetName"></param>
            <param name="destSheetName"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.MoveSheet(System.String,System.String,System.String)">
            <summary>
            Move the sheet
            </summary>
            <param name="sourceSheetName"></param>
            <param name="beforeSheetName"></param>
            <param name="afterSheetName"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetSheetProperty(System.String,System.String,System.Object[])">
            <summary>
            Set sheet properties
            </summary>
            <param name="sheetName"></param>
            <param name="propertyName"></param>
            <param name="values"></param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetSheetProperty(System.String,System.String,System.Object[])">
            <summary>
            Get sheet properties
            </summary>
            <param name="sheetName"></param>
            <param name="propertyName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetSheet(System.String)">
            <summary>
            Get Sheet Object class
            </summary>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetCellValue(System.UInt32,System.UInt32,System.UInt32,System.UInt32,OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Get value from sheet
            </summary>
            <param name="startCol">Start column</param>
            <param name="startRow">Start row</param>
            <param name="endCol">End column</param>
            <param name="endRow">End row</param>
            <param name="referenceFormat">Cell value reference format</param>
            <remarks>
            Cell value options. [Value, Value2, Text, Fomula]
            
            example : Input "=DATE(2017,3,27)"
            value = 2017/03/27
            value2 = 42821
            Text = 27 March 2007
            Fomula = DATE(2017,3,27)
            </remarks>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetValue(System.Object,OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Get the value by reference format specification
            </summary>
            <param name="range">Object of the range to get the value</param>
            <param name="referenceFormat">Cell value reference format</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetCellValue(System.String,System.String,OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Get value from sheet
            </summary>
            <param name="startAdress">Start adress</param>
            <param name="endAdress">End adress</param>
            <param name="referenceFormat">Cell value reference type</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetCellValue(System.Object[0:,0:],System.String,OfficeLib.XLS.XlGetValueFormat)">
            <summary> 
            Set value to sheet
            </summary>
            <param name="values">Setting values</param>
            <param name="startCell">Start Address</param>
            <param name="referenceFormat">Cell value reference format</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetCellValue(System.Object[0:,0:],System.UInt32,System.UInt32,OfficeLib.XLS.XlGetValueFormat)">
            <summary> 
            Set value to sheet
            </summary>
            <param name="values">Setting values</param>
            <param name="startRow">Start row</param>
            <param name="startCol">Start column</param>
            <param name="referenceFormat">Cell value reference format</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetCellValue(System.Object[0:,0:],System.String,System.String,OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Set value to sheet
            </summary>
            <param name="values">Setting values</param>
            <param name="startAddressString">Start Address</param>
            <param name="endAddressString">End Address</param>
            <param name="referenceFormat">Cell value reference format</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetCellValue(System.Object[0:,0:],System.UInt32,System.UInt32,System.UInt32,System.UInt32,OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Set value to sheet
            </summary>
            <param name="values">Setting values</param>
            <param name="startRow">Start row</param>
            <param name="startCol">Start column</param>
            <param name="endRow">End row</param>
            <param name="endCol">End column</param>
            <param name="referenceFormat">Cell value reference format</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetSetFormat(OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Get cell refarence format string
            </summary>
            <param name="referenceFormat">Value format type</param>
            <returns>Format String</returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetLastCell">
            <summary>
            Get the largest cell of the edited range
            </summary>
            <returns>largest cell string</returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.CellCopy(System.String,System.String,System.String)">
            <summary>
            Cell Copy
            </summary>
            <param name="sheetName">Sheet name</param>
            <param name="startAdress">Start adress</param>
            <param name="endAdress">End adress</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.CellPaste(System.String,System.String,System.String)">
            <summary>
            Cell Paste
            </summary>
            <param name="sheetName">Sheet Name</param>
            <param name="startAdress">Start adress</param>
            <param name="endAdress">End adress</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.AtherBookCellPaste(System.String,System.String,System.String,System.String)">
            <summary>
            Paste to another book
            </summary>
            <param name="bookName">Book path</param>
            <param name="sheetName">Sheet name</param>
            <param name="startAdress">Start adress</param>
            <param name="endAdress">End adress</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.AtherBookCellPaste(System.String,System.String,System.String,System.String,OfficeLib.XLS.XlPasteType)">
            <summary>
            Paste to another book
            </summary>
            <param name="bookName">Book path</param>
            <param name="sheetName">Sheet name</param>
            <param name="startAdress">Start adress</param>
            <param name="endAdress">End adress</param>
            <param name="pasteType"></param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SaveAs(System.String)">
            <summary>
            Save As
            </summary>
            <param name="file">Save file path</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.ConvertSetValue``1(``0[][])">
            <summary>Convert Jag Array to Rectangular Array</summary>
            <param name="src">Jag Array</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetRange(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>Get Cell range</summary>
            <param name="startRow">Start row</param>
            <param name="startCol">Start column</param>
            <param name="endRow">End row</param>
            <param name="endCol">End colmun</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.ReplaceNullValue(System.Object[0:,0:],System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Display blanks instead of "N / A".
            </summary>
            <param name="values">source values</param>
            <param name="startRow">Start row</param>
            <param name="startCol">Start column</param>
            <param name="endRow">End row</param>
            <param name="endCol">End colmun</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetChartSeriesName(System.Int32,System.String[])">
            <summary>
            Set ChartSeries Name
            </summary>
            <param name="chartIndex">chart object index</param>
            <param name="names">series names</param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.AddChart">
            <summary>
            Active sheet add chart
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetChartType(System.Int32,OfficeLib.XLS.XlChartType)">
            <summary>
            Set chart type
            </summary>
            <param name="chartIndex"></param>
            <param name="xlType"></param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetChartTypeSeries(System.Int32,OfficeLib.XLS.XlChartType[])">
            <summary>
            
            </summary>
            <param name="chartIndex"></param>
            <param name="xlTypes"></param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetChartTypeSeries(System.Int32,System.Int32,OfficeLib.XLS.XlChartType)">
            <summary>
            
            </summary>
            <param name="chartIndex"></param>
            <param name="seriesIndex"></param>
            <param name="xlType"></param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.GetChartPosition(System.Int32)">
            <summary>
            
            </summary>
            <param name="chartIndex"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Excel.SetChartPosition(System.Int32,System.Int32[])">
            <summary>
            
            </summary>
            <param name="chartIndex"></param>
            <param name="location"></param>
        </member>
        <member name="M:OfficeLib.XLS.Excel.ToString">
            <summary>
            ToString
            </summary>
        </member>
        <member name="T:OfficeLib.XLS.Field`1">
            <summary>
            Table using jagged array
            </summary>
        </member>
        <member name="P:OfficeLib.XLS.Field`1.Column">
            <summary>Table Column length</summary>
        </member>
        <member name="P:OfficeLib.XLS.Field`1.Row">
            <summary>Table Row length</summary>
        </member>
        <member name="P:OfficeLib.XLS.Field`1.Data">
            <summary>Table data</summary>
            <remarks>
            Like a rectangular array, Each element has the same length
            </remarks>
        </member>
        <member name="P:OfficeLib.XLS.Field`1.StartAddress">
            <summary>Starting position of Location(Left Top)</summary>
        </member>
        <member name="P:OfficeLib.XLS.Field`1.EndAddress">
            <summary>Ending position of Location(Right Bottom)</summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.#ctor(`0[][])">
            <summary>
            Constructor
            </summary>
            <param name="value">Data handled as a table</param>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.#ctor(`0[][],OfficeLib.XLS.Address)">
            <summary>
            Constructor
            </summary>
            <param name="value">Data handled as a table</param>
            <param name="startAddress">Start address</param>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.#ctor(`0[0:,0:])">
            <summary>
            Constructor
            </summary>
            <param name="value">Data handled as a table</param>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.#ctor(`0[0:,0:],OfficeLib.XLS.Address)">
            <summary>
            Constructor
            </summary>
            <param name="value">Data handled as a table</param>
            <param name="startAddress">Start address</param>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.RectToJag(`0[0:,0:])">
            <summary>
            Rect array to jag array
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.SetProperties(`0[][],OfficeLib.XLS.Address)">
            <summary>
            Set values of Constructor
            </summary>
            <param name="value"></param>
            <param name="address"></param>
        </member>
        <member name="P:OfficeLib.XLS.Field`1.Item(System.Int32)">
            <summary>
            Get by specifying the row of the table
            </summary>
        </member>
        <member name="P:OfficeLib.XLS.Field`1.Item(OfficeLib.XLS.Address)">
            <summary>
            Get the cell Value
            </summary>
        </member>
        <member name="P:OfficeLib.XLS.Field`1.Item(System.String)">
            <summary>
            Get the cell Value
            </summary>
        </member>
        <member name="P:OfficeLib.XLS.Field`1.Item(OfficeLib.XLS.Address,OfficeLib.XLS.Address)">
            <summary>
            Get the cell Value and Set the cell Value
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_BitwiseAnd(OfficeLib.XLS.Field{`0},OfficeLib.XLS.Field{`0})">
            <summary>
            Joining tables(Horizontally)
            </summary>
            <remarks>Based on the less row</remarks>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_BitwiseOr(OfficeLib.XLS.Field{`0},OfficeLib.XLS.Field{`0})">
            <summary>
            Joining tables(Horizontally)
            </summary>
            <remarks>Based on the one with more rows</remarks>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_Addition(OfficeLib.XLS.Field{`0},OfficeLib.XLS.Field{`0})">
            <summary>
            Joining tables(vertically)
            </summary>
            <remarks>Based on the one with more Columns</remarks>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_LeftShift(OfficeLib.XLS.Field{`0},System.Int32)">
            <summary>
            Delete columns of the table from the right
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_RightShift(OfficeLib.XLS.Field{`0},System.Int32)">
            <summary>
            Delete columns of the table from the left
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_Subtraction(OfficeLib.XLS.Field{`0},System.Int32)">
            <summary>
            Delete columns of the table from the top
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_ExclusiveOr(OfficeLib.XLS.Field{`0},System.Int32)">
            <summary>
            Delete columns of the table from the bottom
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_Division(OfficeLib.XLS.Field{`0},System.Int32)">
            <summary>
            Vertical segmentation of Tables
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_Modulus(OfficeLib.XLS.Field{`0},System.Int32)">
            <summary>
            Horizontal segmentation of Tables
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.op_Explicit(`0[][])~OfficeLib.XLS.Field{`0}">
            <summary>
            Cast
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.TakeVerticalField(System.Int32,System.Int32)">
            <summary>
            Vertical segmentation of Table, and get the table
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.TakeVertical(System.Int32)">
            <summary>
            Extract values vertically from the table
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.Convert``1">
            <summary>
            Convert table contents to specified type
            </summary>
            <typeparam name="TOutput"></typeparam>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.Convert(System.Object[][])">
            <summary>
            Convert table contents to specified type
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.GetCellValue(OfficeLib.XLS.Address)">
            <summary>
            Get the cell Value
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Field`1.Set(`0[][])">
            <summary>
            Data setter (first cell at A1 -> last)
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:OfficeLib.XLS.Address">
            <summary>Cell address class</summary>
        </member>
        <member name="F:OfficeLib.XLS.Address.ALPHABET_CNT">
            <summary>Number of characters from alphabet A to Z</summary>
        </member>
        <member name="F:OfficeLib.XLS.Address.A_OFFSET_NUM">
            <summary>Offset at alphabet conversion</summary>
        </member>
        <member name="F:OfficeLib.XLS.Address.MAX_ROW">
            <summary>Max of row number(2007-)</summary>
        </member>
        <member name="F:OfficeLib.XLS.Address.MAX_COLUMN">
            <summary>Max of column number(2007-)</summary>
        </member>
        <member name="P:OfficeLib.XLS.Address.ReferenceString">
            <summary>a1 format string</summary>
        </member>
        <member name="P:OfficeLib.XLS.Address.Column">
            <summary>Column number</summary>
        </member>
        <member name="P:OfficeLib.XLS.Address.Row">
            <summary>Row number</summary>
        </member>
        <member name="M:OfficeLib.XLS.Address.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="address">cell address string</param>
        </member>
        <member name="M:OfficeLib.XLS.Address.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="column"></param>
            <param name="row"></param>
        </member>
        <member name="M:OfficeLib.XLS.Address.Shift(System.Int32,System.Int32)">
            <summary>
            Shift cell address
            </summary>
            <param name="col">Amount of movement in the column direction</param>
            <param name="row">Amount of movement in the row direction</param>
        </member>
        <member name="M:OfficeLib.XLS.Address.ToString">
            <summary>
            Returns a character string of this range
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.Address.Shift(OfficeLib.XLS.Address,System.Int32,System.Int32)">
            <summary>
            Shifts from the original address to get a new address.
            </summary>
            <param name="address">Range object</param>
            <param name="col">Amount of movement in the column direction</param>
            <param name="row">Amount of movement in the row direction</param>
        </member>
        <member name="M:OfficeLib.XLS.Address.ToExcelColumnString(System.UInt32)">
            <summary>
            Convert numbers to strings in A1 format
            </summary>
            <param name="value">Value to convert</param>
        </member>
        <member name="M:OfficeLib.XLS.Address.ToColumnNumber(System.String)">
            <summary>
            Convert column side strings to numbers
            </summary>
            <param name="columnString">column side strings</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Address.ToAddressItems(System.String)">
            <summary>
            Convert character string to cell Items
            </summary>
            <param name="value">cell address string</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Address.SplitRC(System.String)">
            <summary>
            Split into rows and columns(A1 format)
            </summary>
            <param name="cellAddress"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Address.ConvertString(System.UInt32,System.Collections.Generic.Queue{System.Char})">
            <summary>
            Convert strings
            </summary>
            <param name="returnValue">recursive call value(default value 0)</param>
            <param name="charQueue">char array</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Address.CalcDesimal(System.Char,System.Int32)">
            <summary>
            Value calculation for character code conversion
            </summary>
            <param name="charVal">charactor</param>
            <param name="count">process count</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Address.LimitRowAdjustment(System.UInt32)">
            <summary>
            Limit check of row
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.Address.LimitColumnAdjustment(System.UInt32)">
            <summary>
            Limit check of row
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="T:OfficeLib.XLS.WorkBook">
            <summary>Excel Workbook class</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkBook.Name">
            <summary>Book name</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkBook.Path">
            <summary>Book paht</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkBook.WorkSheets">
            <summary>Book has Sheets List</summary>
        </member>
        <member name="F:OfficeLib.XLS.WorkBook._sheetNames">
            <summary>(private variable) sheet names</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkBook.SheetNames">
            <summary>Book has sheet names</summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="filePath">Fike path</param>
        </member>
        <member name="P:OfficeLib.XLS.WorkBook.Item(System.String)">
            <summary>Retrieve sheet object from sheet name</summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.GetInstance(System.String)">
            <summary>
            Get Excel instance
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.GetInstance(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="isAutoSave"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.GetInstance">
            <summary>
            Get Excel instance
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.Read">
            <summary>
            Read all the sheets in the book
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.Read(OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Read all the sheets in the book
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.Read(System.String)">
            <summary>
            Read sheet specification
            </summary>
            <param name="sheetName">Sheet name</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.Read(System.String,OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Read sheet specification
            </summary>
            <param name="sheetName">Sheet name</param>
            <param name="format"></param>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.ReadPreset">
            <summary>
            Read preset sheets
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.ReadPreset(OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Read preset sheets
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.ReadBase(OfficeLib.XLS.XlGetValueFormat,System.String[])">
            <summary>
            Read Sheets base function
            </summary>
            <param name="format"></param>
            <param name="sheetNames"></param>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.CanRead(OfficeLib.XLS.Excel,OfficeLib.XLS.WorkSheet)">
            <summary>
            Confirm whether it is readable
            </summary>
            <param name="excel">Excel instance</param>
            <param name="sheet">Sheet instance</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.WriteBook">
            <summary>
            Batch Writing of Book
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.WriteSheet(System.String)">
            <summary>
            Write sheet specification
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.CanWrite(OfficeLib.XLS.Excel,OfficeLib.XLS.WorkSheet)">
            <summary>
            Confirm whether it is writable
            </summary>
            <param name="excel">Excel instance</param>
            <param name="sheet">Sheet instance</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.AddSheet``1(``0)">
            <summary>
            Add sheet
            </summary>
            <param name="sheet">Sheet instance</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.AddRangeSheet``1(``0[])">
            <summary>
            Add multiple sheets
            </summary>
            <param name="sheets">Sheet array</param>
            <returns>Error Count</returns>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.GetKeys">
            <summary>
            Get this worksheet names
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkBook.SheetHide(System.String)">
            <summary>
            
            </summary>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="T:OfficeLib.XLS.WorkSheet">
            <summary>Worksheet class</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.Name">
            <summary>Sheet name</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.Tables">
            <summary>Tables defined in the sheet</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.EntireField">
            <summary>The entire loaded field</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.MaxRow">
            <summary>Max row</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.MaxColumn">
            <summary>Max column</summary>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.TableNames">
            <summary>Name list from tables defined</summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.#ctor(System.String,OfficeLib.XLS.Address)">
            <summary>
            Constructor
            </summary>
            <param name="name"></param>
            <param name="endAddress"></param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name"></param>
            <param name="endAddress"></param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.#ctor(System.String,System.String,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="name"></param>
            <param name="maxColumns"></param>
            <param name="maxRows"></param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.#ctor(System.String,System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="name">Sheet name</param>
            <param name="maxColumns"></param>
            <param name="maxRows"></param>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.Item(System.Int32)">
            <summary>Get row</summary>
            <param name="row">Row number of the sheet</param>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.Item(OfficeLib.XLS.Address)">
            <summary>Get cell value</summary>
            <param name="address">Sheet address</param>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.Item(OfficeLib.XLS.Address,OfficeLib.XLS.Address)">
            <summary>Get Values in the specified range</summary>
            <param name="startAddress">Start cell</param>
            <param name="endAddress">End cell</param>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.Item(System.String,System.String)">
            <summary>Get Values in the specified range</summary>
            <param name="startAddrStr">Start cell</param>
            <param name="endAddrStr">End cell</param>
        </member>
        <member name="P:OfficeLib.XLS.WorkSheet.Item(System.String)">
            <summary>Get table</summary>
            <param name="tableName">Table name</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.Read(OfficeLib.XLS.Excel)">
            <summary>
            Read the sheet
            </summary>
            <param name="excel">Excel instance</param>
            <remarks>
            Field size Default(1000 x 1000)
            </remarks>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.Read(OfficeLib.XLS.Excel,OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Read the sheet
            </summary>
            <param name="excel">Excel instance</param>
            <param name="format">Get value format type</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.GetTable(OfficeLib.XLS.Excel,OfficeLib.XLS.Address,OfficeLib.XLS.Address)">
            <summary>
            Get table from its own field
            </summary>
            <param name="excel">Excel instance</param>
            <param name="startAddress">Satart Position</param>
            <param name="endAddress">End Position</param>
            <returns>Field Data</returns>
            <remarks>
            Get value from excel instance
            Since it is acquired directly from Excel, 
            it can be obtained freely if it is within the allowable range of Excel
            </remarks>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.GetTable(OfficeLib.XLS.Address,OfficeLib.XLS.Address)">
            <summary>
            Get table from its own field
            </summary>
            <param name="startAddress">Satart Position</param>
            <param name="endAddress">End Position</param>
            <returns>Field Data</returns>
            <remarks>
            * Points to note when specifying the range.
            It will never be acquired beyond the scope of the Field variable that is acquired in advance
            </remarks>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.GetTable(System.String,System.String)">
            <summary>
            Get table from its own field
            </summary>
            <param name="startAddrStr">Satart Position</param>
            <param name="endAddrStr">End Position</param>
            <returns>Table data</returns>
            <remarks>
            * Points to note when specifying the range.
            It will never be acquired beyond the scope of the Field variable that is acquired in advance
            </remarks>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.UpdateTableFromField">
            <summary>
            Update the Table from the Field
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.UpdateFieldFromTable">
            <summary>
            Update the Field from the Table
            </summary>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.Write(OfficeLib.XLS.Excel)">
            <summary>
            Write to Excel
            </summary>
            <param name="excel">Excel instance</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.Write``1(OfficeLib.XLS.Excel,``0[][],OfficeLib.XLS.Address)">
            <summary>
            Write to Excel
            </summary>
            <typeparam name="T"></typeparam>
            <param name="excel">Excel instance</param>
            <param name="value">Setting value</param>
            <param name="startAddress">Satart Position</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.SetTable``1(OfficeLib.XLS.Excel,``0[][],OfficeLib.XLS.Address)">
            <summary>
            Table data setting
            </summary>
            <typeparam name="T"></typeparam>
            <param name="excel">Excel instance</param>
            <param name="value">Setting value</param>
            <param name="startAddress">Satart Position</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.SetValue``1(OfficeLib.XLS.Excel,``0,OfficeLib.XLS.Address,OfficeLib.XLS.XlGetValueFormat)">
            <summary>
            Set value to sheet
            </summary>
            <typeparam name="T"></typeparam>
            <param name="excel"></param>
            <param name="value"></param>
            <param name="address"></param>
            <param name="format"></param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.SetTable``1(OfficeLib.XLS.Excel,``0[][],OfficeLib.XLS.Address,OfficeLib.XLS.Address)">
            <summary>
            Table data setting
            </summary>
            <typeparam name="T"></typeparam>
            <param name="excel">Excel instance</param>
            <param name="value">Setting value</param>
            <param name="startAddress">Satart Position</param>
            <param name="endAddress">End Position</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.AddTable(System.String,OfficeLib.XLS.Field{System.Object})">
            <summary>Add table</summary>
            <param name="key">Table name</param>
            <param name="table">Table data</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.AddTable(System.String,OfficeLib.XLS.Address,OfficeLib.XLS.Address)">
            <summary>Add table</summary>
            <param name="key">Table name</param>
            <param name="startAddress">Start Position</param>
            <param name="endAddress">End Position</param>
        </member>
        <member name="M:OfficeLib.XLS.WorkSheet.AddTable(System.String,System.String,System.String)">
            <summary>Add table</summary>
            <param name="key">Table name</param>
            <param name="startAddress">Start Position(String)</param>
            <param name="endAddress">End Position(String)</param>
        </member>
        <member name="T:OfficeLib.EML.EMail">
            <summary>
            E-Mail Class
            </summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_SUBJECT">
            <summary>Subject</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_ADDRESS">
            <summary>EMail Address</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_NAME">
            <summary>EMail Name</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_TYPE">
            <summary>Recipient Type</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_COUNT">
            <summary>Count</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_ITEMS">
            <summary>Items</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_ITEM">
            <summary>Item</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_SENDER">
            <summary>From</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_RECIPIENTS">
            <summary>Recipients</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_BODY">
            <summary>Body</summary>
        </member>
        <member name="F:OfficeLib.EML.EMail.PROP_ATTACHEMENTS">
            <summary>Attachement</summary>
        </member>
        <member name="P:OfficeLib.EML.EMail.Subject">
            <summary>
            Subject
            </summary>
        </member>
        <member name="P:OfficeLib.EML.EMail.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:OfficeLib.EML.EMail.To">
            <summary>
            To
            </summary>
        </member>
        <member name="P:OfficeLib.EML.EMail.CC">
            <summary>
            CC
            </summary>
        </member>
        <member name="P:OfficeLib.EML.EMail.BCC">
            <summary>
            BCC
            </summary>
        </member>
        <member name="P:OfficeLib.EML.EMail.SendDate">
            <summary>
            Send Date
            </summary>
        </member>
        <member name="P:OfficeLib.EML.EMail.Body">
            <summary>
            Body
            </summary>
        </member>
        <member name="P:OfficeLib.EML.EMail.HasAttachements">
            <summary>
            Has Attachements
            </summary>
        </member>
        <member name="M:OfficeLib.EML.EMail.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:OfficeLib.EML.EMail.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="mailItem">Mail object</param>
        </member>
        <member name="M:OfficeLib.EML.EMail.GetMailAdds(System.Object)">
            <summary>
            Get Mail Address from mail object
            </summary>
            <param name="mailAdds">Mail object</param>
        </member>
        <member name="M:OfficeLib.EML.EMail.ToString">
            <summary>
            To String
            </summary>
        </member>
        <member name="T:OfficeLib.EML.MailAddress">
            <summary>
            E-Mail Address Class
            </summary>
        </member>
        <member name="P:OfficeLib.EML.MailAddress.DisplayName">
            <summary>
            Display Name
            </summary>
        </member>
        <member name="P:OfficeLib.EML.MailAddress.Address">
            <summary>
            Email Address
            </summary>
        </member>
        <member name="P:OfficeLib.EML.MailAddress.Type">
            <summary>
            Email Recipient Type
            </summary>
        </member>
        <member name="M:OfficeLib.EML.MailAddress.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="address">EMail Address</param>
        </member>
        <member name="M:OfficeLib.EML.MailAddress.#ctor(System.String,System.String,OfficeLib.EML.Outlook.OlMailRecipientType)">
            <summary>
            Constructor
            </summary>
            <param name="address">EMail Address</param>
            <param name="name">Display Name</param>
            <param name="olType"></param>
        </member>
        <member name="M:OfficeLib.EML.MailAddress.ToString">
            <summary>
            To String
            </summary>
        </member>
        <member name="T:OfficeLib.EML.Outlook">
            <summary>
            
            </summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.PROG_ID">
            <summary>Application object ID</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.METHOD_GET_NAMESPACE">
            <summary>Command of GetNamespace</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.METHOD_GET_DEFAULT_FOLDER">
            <summary>Command of GetNamespace</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.METHOD_RESTRICT">
            <summary>Command of Restrict</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.PROP_UNREAD_ITEM_COUNT">
            <summary>Unread item count</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.PROP_FOLDERS">
            <summary>Folders</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.PROP_SUBJECT">
            <summary></summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.ARG_MAPI">
            <summary></summary>
        </member>
        <member name="T:OfficeLib.EML.Outlook.OlDefaultFolders">
            <summary>Specifies the folder type for a specified folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderCalendar">
            <summary>The Calendar folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderConflicts">
            <summary>The Conflicts folder (subfolder of the Sync Issues folder)  Only available for an Exchange account</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderContacts">
            <summary>The Contacts folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderDeletedItems">
            <summary>The Deleted Items folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderDrafts">
            <summary>The Drafts folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderInbox">
            <summary>The Inbox folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderJournal">
            <summary>The Journal folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderJunk">
            <summary>The Junk E-Mail folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderLocalFailures">
            <summary>The Local Failures folder (subfolder of the Sync Issues folder)  Only available for an Exchange account</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderManagedEmail">
            <summary>The top-level folder in the Managed Folders group. For more information on Managed Folders, see the Help in Microsoft Outlook. Only available for an Exchange account</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderNotes">
            <summary>The Notes folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderOutbox">
            <summary>The Outbox folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderSentMail">
            <summary>The Sent Mail folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderServerFailures">
            <summary>The Server Failures folder (subfolder of the Sync Issues folder)  Only available for an Exchange account</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderSuggestedContacts">
            <summary>The Suggested Contacts folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderSyncIssues">
            <summary>The Sync Issues folder. Only available for an Exchange account</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderTasks">
            <summary>The Tasks folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderToDo">
            <summary>The To Do folder</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olPublicFoldersAllPublicFolders">
            <summary>The All Public Folders folder in the Exchange Public Folders store.Only available for an Exchange account</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlDefaultFolders.olFolderRssFeeds">
            <summary>The RSS Feeds folder</summary>
        </member>
        <member name="T:OfficeLib.EML.Outlook.OlMailRecipientType">
            <summary>Indicates the recipient type for the Item.</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlMailRecipientType.olOriginator">
            <summary>Originator (sender) of the Item.</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlMailRecipientType.olTo">
            <summary>The recipient is specified in the To property of the Item.</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlMailRecipientType.olCC">
            <summary>The recipient is specified in the CC property of the Item.</summary>
        </member>
        <member name="F:OfficeLib.EML.Outlook.OlMailRecipientType.olBCC">
            <summary>The recipient is specified in the BCC property of the Item.</summary>
        </member>
        <member name="M:OfficeLib.EML.Outlook.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OfficeLib.EML.Outlook.Open(System.String)">
            <summary>
            Open E-Mail
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.EML.Outlook.Connect">
            <summary>
            Connect to Outlook
            </summary>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.EML.Outlook.Close">
            <summary>
            Close Outlook
            </summary>
        </member>
        <member name="M:OfficeLib.EML.Outlook.GetFolder(OfficeLib.EML.Outlook.OlDefaultFolders)">
            <summary>
            Get Folder object
            </summary>
            <param name="folderType"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.EML.Outlook.GetChildFolder(System.Object,System.String)">
            <summary>
            Get child folder object
            </summary>
            <param name="folder"></param>
            <param name="childFolderName"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.EML.Outlook.GetMails(System.Object)">
            <summary>
            Retrieve mail from specified folder.
            </summary>
            <param name="folder">Folder object</param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.EML.Outlook.GetUnreadCount(OfficeLib.FolderSearchOption)">
            <summary>
            Get the number of unread counts in inbox
            </summary>
            <returns>Unread mail count</returns>
        </member>
        <member name="M:OfficeLib.EML.Outlook.GetUnreadCount(System.String)">
            <summary>
            Get the number of unread counts in specified folder
            </summary>
            <param name="folderName">folder name</param>
            <returns>Unread mail count</returns>
        </member>
        <member name="M:OfficeLib.EML.Outlook.UnreadCount(System.Object)">
            <summary>
            Get the number of unread counts in specified folder
            </summary>
        </member>
        <member name="M:OfficeLib.EML.Outlook.AddFolder(System.Object,System.String,OfficeLib.EML.Outlook.OlDefaultFolders)">
            <summary>
            Add folder from specified folder.
            </summary>
            <param name="folder"></param>
            <param name="folderName"></param>
            <param name="folderType"></param>
        </member>
        <member name="M:OfficeLib.EML.Outlook.AutoFiltering(System.Object,System.Object,System.Func{System.Object,System.Boolean})">
            <summary>
            Auto Filtering
            </summary>
            <param name="srcFolder">Src folder object</param>
            <param name="destFolder">Dest folder object</param>
            <param name="filter">Filter script</param>
        </member>
        <member name="T:OfficeLib.EnumSheetPermission">
            <summary>Sheet access permission definition</summary>
        </member>
        <member name="F:OfficeLib.EnumSheetPermission.Read">
            <summary>Read only</summary>
        </member>
        <member name="F:OfficeLib.EnumSheetPermission.Write">
            <summary>Write only</summary>
        </member>
        <member name="F:OfficeLib.EnumSheetPermission.ReadWrite">
            <summary>Readable and writable</summary>
        </member>
        <member name="T:OfficeLib.PageAttribute">
            <summary>
            Attribute settings for reading and writing
            </summary>
        </member>
        <member name="P:OfficeLib.PageAttribute.Permission">
            <summary>Access Permission</summary>
        </member>
        <member name="M:OfficeLib.PageAttribute.#ctor(OfficeLib.EnumSheetPermission)">
            <summary>Constructor</summary>
        </member>
        <member name="M:OfficeLib.Comm.ContainsBitFlag(System.UInt32,System.Int32)">
            <summary>
            Is it an value containing bit
            </summary>
            <param name="value">value</param>
            <param name="bit">bit</param>
        </member>
        <member name="M:OfficeLib.Comm.Contains``1(``0[],``0)">
            <summary>
            Is it an array containing keys
            </summary>
            <param name="values">value</param>
            <param name="key">key</param>
        </member>
        <member name="M:OfficeLib.Comm.IsNullOrEmpty(System.String)">
            <summary>
            String is null or empty
            </summary>
            <param name="value">value</param>
        </member>
        <member name="T:OfficeLib.ConvertExtention">
            <summary>Extended function class for type conversion</summary>
        </member>
        <member name="M:OfficeLib.ConvertExtention.To``1(System.Object)">
            <summary>
            Type Conversion
            </summary>
            <typeparam name="TOutput">Type after conversion</typeparam>
            <param name="value">Value of conversion source</param>
        </member>
        <member name="M:OfficeLib.ConvertExtention.To(System.Object,System.Type)">
            <summary>
            Type Conversion
            </summary>
            <param name="value">Value of conversion source</param>
            <param name="type">Type after conversion</param>
            <remarks>Cast of return value required</remarks>
        </member>
        <member name="M:OfficeLib.ConvertExtention.ConvertAll``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>Type Conversion of Arrays</summary>
            <typeparam name="TInput">Type of conversion source</typeparam>
            <typeparam name="TOutput">Type after conversion</typeparam>
            <param name="values">Value of conversion source</param>
        </member>
        <member name="M:OfficeLib.ConvertExtention.ConvertAll``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Type Conversion of Jag Arrays</summary>
            <typeparam name="TInput">Type of conversion source</typeparam>
            <typeparam name="TOutput">Type after conversion</typeparam>
            <param name="values">Value of conversion source</param>
        </member>
        <member name="M:OfficeLib.ConvertExtention.ToObject``1(``0[])">
            <summary>
            Convert an array to an object type
            </summary>
            <typeparam name="T">Type of conversion source</typeparam>
            <param name="src">Value of conversion source</param>
        </member>
        <member name="M:OfficeLib.ConvertExtention.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Enumerable to array
            </summary>
        </member>
        <member name="T:OfficeLib.JagExtention">
            <summary>Extended function class of Jag array</summary>
        </member>
        <member name="M:OfficeLib.JagExtention.OuterJoin``1(``0[][],``0[][])">
            <summary>Outer Join(Include all)</summary>
            <typeparam name="T"></typeparam>
            <param name="srcTable">Table on the right</param>
            <param name="joinTable">Table on the left</param>
            <remarks>
            Combine with reference to the more array elements.
            Elements without short arrays are created with default values.
            </remarks>
        </member>
        <member name="M:OfficeLib.JagExtention.InnerJoin``1(``0[][],``0[][])">
            <summary>Outer Join(Common row only)</summary>
            <typeparam name="T"></typeparam>
            <param name="srcTable">Table on the right</param>
            <param name="joinTable">Table on the left</param>
            <remarks>
            Combine with the smaller number of elements of the array as the reference.
            The longer line is truncated.
            </remarks>
        </member>
        <member name="M:OfficeLib.JagExtention.Join``1(``0[][],``0[][],System.Int32)">
            <summary>Outer join with the specified number of rows</summary>
            <typeparam name="T"></typeparam>
            <param name="srcTable">Table on the right</param>
            <param name="joinTable">Table on the left</param>
            <param name="rows">specific number of rows</param>
            <remarks>
            Combine  two tables with the specified number of rows.
            If it exceeds specified line, it creates with default value.
            Trimmed rows are truncated.
            </remarks>
        </member>
        <member name="M:OfficeLib.JagExtention.Union``1(``0[][],``0[][][])">
            <summary>Union</summary>
            <typeparam name="T"></typeparam>
            <param name="srcTable">Table on the top</param>
            <param name="unionTable">Table on the bottom</param>
            <remarks>
            Combine the table to the underside
            Each column is Combined as it is.
            </remarks>
        </member>
        <member name="M:OfficeLib.JagExtention.VDividingArray``1(``0[][],System.Int32)">
            <summary>Split array vertically</summary>
            <typeparam name="T"></typeparam>
            <param name="src">Table</param>
            <param name="dividCount">Division number</param>
        </member>
        <member name="M:OfficeLib.JagExtention.HDividingArray``1(``0[][],System.Int32)">
            <summary>Split array horizontally</summary>
            <typeparam name="T"></typeparam>
            <param name="src">Table</param>
            <param name="divid">Division number</param>
        </member>
        <member name="M:OfficeLib.JagExtention.ColumnRemoveStart``1(``0[][],System.Int32)">
            <summary>Remove the specified number of columns from the first column</summary>
            <typeparam name="T"></typeparam>
            <param name="src">Table</param>
            <param name="trimCount">Number of columns to delete</param>
        </member>
        <member name="M:OfficeLib.JagExtention.ColumnRemoveEnd``1(``0[][],System.Int32)">
            <summary>Remove the specified number of columns from the last column</summary>
            <typeparam name="T"></typeparam>
            <param name="src">Table</param>
            <param name="trimCount">Number of columns to delete</param>
        </member>
        <member name="M:OfficeLib.JagExtention.ToRectArray``1(``0[][])">
            <summary>
            Convert to rectangular array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">Jag Array</param>
        </member>
        <member name="M:OfficeLib.JagExtention.ToRectLikeJagArray``1(``0[][])">
            <summary>
            Align horizontal width of jag array like rectangular array
            </summary>
            <param name="src">Jag Array</param>
        </member>
        <member name="M:OfficeLib.JagExtention.ToJagArray``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Convert a one-dimensional array to a two-dimensional array
            </summary>
            <param name="src">Array</param>
            <param name="divCount">Element count(Row count)</param>
            <remarks>
            Specify a divisible number of one-dimensional elements.
            Truncated decimal places are truncated.
            </remarks>
        </member>
        <member name="M:OfficeLib.JagExtention.ToJagArray``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Convert an enumeration enumeration to a two-dimensional array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">Enumeration enumeration</param>
            <returns>Jag Array</returns>
        </member>
        <member name="M:OfficeLib.JagExtention.ToSingleArray``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Convert two-dimensional array to one-dimensional array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">Enumeration enumeration</param>
        </member>
        <member name="M:OfficeLib.JagExtention.TakeVertical``1(``0[][],System.Int32)">
            <summary>
            Extract values vertically from the table
            </summary>
        </member>
        <member name="M:OfficeLib.JagExtention.RangeTake``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Acquire the specified range value from the table
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">Table</param>
            <param name="top">Start row</param>
            <param name="bottom">End row</param>
            <param name="left">Start column</param>
            <param name="right">End column</param>
        </member>
        <member name="M:OfficeLib.JagExtention.ColumnsMax``1(``0[][])">
            <summary>Get maximum length in Table</summary>
            <param name="src">Table</param>
        </member>
        <member name="M:OfficeLib.JagExtention.SkipTake``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Extract specified range element from specified position in array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">Array</param>
            <param name="skip">Length to skip</param>
            <param name="length">Length to take</param>
        </member>
        <member name="T:OfficeLib.InvokeExtention">
            <summary>Reflection InvokeMember extention class</summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.Method(System.Object,System.String)">
            <summary>
            Invoke Method extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.Method(System.Object,System.String,System.Object[])">
            <summary>
            Invoke Method extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.Method(System.Object,System.String,System.Object,System.Object[])">
            <summary>
            Invoke Method extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.Method(System.Object,System.String,System.Reflection.Binder,System.Object,System.Object[])">
            <summary>
            Invoke Method extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.GetProperty(System.Object,System.String)">
            <summary>
            Invoke Getproperty extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.GetProperty(System.Object,System.String,System.Object[])">
            <summary>
            Invoke Getproperty extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.GetProperty(System.Object,System.String,System.Object,System.Object[])">
            <summary>
            Invoke Getproperty extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.GetProperty(System.Object,System.String,System.Reflection.Binder,System.Object,System.Object[])">
            <summary>
            Invoke Getproperty extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.SetProperty(System.Object,System.String,System.Object[])">
            <summary>
            Invoke Setproperty extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.SetProperty(System.Object,System.String,System.Object,System.Object[])">
            <summary>
            Invoke Setproperty extention
            </summary>
        </member>
        <member name="M:OfficeLib.InvokeExtention.SetProperty(System.Object,System.String,System.Reflection.Binder,System.Object,System.Object[])">
            <summary>
            Invoke Setproperty extention
            </summary>
        </member>
        <member name="T:OfficeLib.OfficeCore">
            <summary>Microsoft Office application class</summary>
            <remarks>Excel, Word, PowerPoint</remarks>
        </member>
        <member name="P:OfficeLib.OfficeCore.ApplicationID">
            <summary>Application ID</summary>
        </member>
        <member name="P:OfficeLib.OfficeCore.Path">
            <summary>File path of this application</summary>
            <remarks>
            Must set full path
            </remarks>
        </member>
        <member name="P:OfficeLib.OfficeCore.Application">
            <summary>Application resource</summary>
        </member>
        <member name="P:OfficeLib.OfficeCore.WorkArea">
            <summary>Work area</summary>
        </member>
        <member name="P:OfficeLib.OfficeCore.ClipBoard">
            <summary>Copy and Paste Buffer</summary>
        </member>
        <member name="P:OfficeLib.OfficeCore.Version">
            <summary>Version of Application</summary>
        </member>
        <member name="M:OfficeLib.OfficeCore.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="appID">Application ID</param>
        </member>
        <member name="M:OfficeLib.OfficeCore.CreateApplication">
            <summary>
            Create Application
            </summary>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.OfficeCore.Open(System.String)">
            <summary>Open Application</summary>
            <param name="filePath">Application path</param>
            <returns>Success(true) or failure(false) of execution</returns>
        </member>
        <member name="M:OfficeLib.OfficeCore.Dispose">
            <summary> Dispose </summary>
            <remarks>Own 'Close' method calling.</remarks>
        </member>
        <member name="M:OfficeLib.OfficeCore.Close">
            <summary>Close aplication</summary>
            <remarks>
            It must be done at the end.
            If not called, the process will keep capturing the file.
            (Especially Excel!)
            </remarks>
        </member>
        <member name="M:OfficeLib.OfficeCore.ReleaseObject(System.Object)">
            <summary>
            Resource release
            </summary>
            <param name="target">Target object</param>
        </member>
        <member name="M:OfficeLib.OfficeCore.ReleaseObjects(System.Object[])">
            <summary>
            Resources release
            </summary>
            <param name="targets">List of target object</param>
        </member>
        <member name="M:OfficeLib.OfficeCore.QuitAplication">
            <summary>Quit Application</summary>
        </member>
        <member name="T:OfficeLib.PPT.PowerPoint">
            <summary>PowerPoint class</summary>
        </member>
        <member name="F:OfficeLib.PPT.PowerPoint.PROG_ID">
            <summary>Application object ID</summary>
        </member>
        <member name="F:OfficeLib.PPT.PowerPoint.OBJECT_PRESENTATIONS">
            <summary>Presentations object ID</summary>
        </member>
        <member name="F:OfficeLib.PPT.PowerPoint.PROP_SLIDES">
            <summary>Property Slides</summary>
        </member>
        <member name="F:OfficeLib.PPT.PowerPoint.PROP_NOTESPAGE">
            <summary>Property NotesPage</summary>
        </member>
        <member name="P:OfficeLib.PPT.PowerPoint.Presentation">
            <summary>Presentation object</summary>
        </member>
        <member name="P:OfficeLib.PPT.PowerPoint.Slide">
            <summary>Slide object</summary>
        </member>
        <member name="M:OfficeLib.PPT.PowerPoint.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:OfficeLib.PPT.PowerPoint.Open(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.PPT.PowerPoint.New(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:OfficeLib.PPT.PowerPoint.SelectSlide(System.Int32)">
            <summary>
            
            </summary>
            <param name="slideNo"></param>
        </member>
        <member name="M:OfficeLib.PPT.PowerPoint.Save">
            <summary>Save</summary>
        </member>
        <member name="M:OfficeLib.PPT.PowerPoint.SaveAs(System.String)">
            <summary>Save As</summary>
            <param name="savePath">Seve path</param>
        </member>
        <member name="M:OfficeLib.PPT.PowerPoint.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="M:OfficeLib.PPT.PowerPoint.ClosePresentation">
            <summary>
            Close Presentation
            </summary>
        </member>
    </members>
</doc>
